import { loadFilesSync } from "@graphql-tools/load-files"
import { mergeTypeDefs,mergeResolvers} from "@graphql-tools/merge"
import { clientRe} from './cli'
import path from "path";


const __dirname = path.dirname(new URL(import.meta.url).pathname);
const typesArray = loadFilesSync(path.join(__dirname, 'api/**/*.graphql'))
const resolversArray = loadFilesSync(path.join(__dirname, 'api/**/*.resolvers.*' ))
console.log("hi")
export const typeDefs = mergeTypeDefs(typesArray) 
export const resolvers = mergeResolvers(resolversArray)

const { loadFilesSync } = require('@graphql-tools/load-files');
const { mergeTypeDefs, mergeResolvers } = require('@graphql-tools/merge');
const path = require('path');
// const clientResolver = require('./clientResolver')
// const productResolver = require('./productResolver')

// const clientType = require('./clientType')
// const productType = require('./productType')
 
// const types = [clientType, productType]

// const resolvers = [clientResolver, productResolver]
// console.log("hi");

// module.exports = {
//   typeDefs: mergeTypeDefs(types),
//   resolvers: mergeResolvers(resolvers)
// };

const schema = {
  typeDefs: mergeTypeDefs(types),
  resolvers: mergeResolvers(resolvers)
}

// // schema.js
// // typeDefs, resolver 파일 합칠때 사용
// import { makeExecutableSchema } from "@graphql-tools/schema";
// // 조건 만족하는 파일 불러올때 사용
// // import { loadFilesSync } from "@graphql-tools/load-files";
// // typeDefs는 typeDefs끼리, resolvers는 resolvers끼리 합칠때 사용
// import { mergeTypeDefs, mergeResolvers } from "@graphql-tools/merge";

// const loadFilesSync = require("@graphql-tools/load-files").loadFilesSync;
// /*
//   loadFilesSync로, 현재폴더(__dirname)에 있는, 모든폴더(**) 속,
//   typeDefs.js로 끝나는 모든파일(*) 불러오기
// */

// const loadedTypes = loadFilesSync(`${__dirname}api/**/*.graphql`);
// /*
//   loadFilesSync로, 현재폴더(__dirname)에 있는, 모든폴더(**) 속,
//   queries.js와 mutations.js로 끝나는 모든파일(*) 불러오기
// */

// const loadedResolvers = loadFilesSync(
//   `${__dirname}api/**/*.resolvers.*`
// );
// // 불러온 typeDefs 합치기
// const typeDefs = mergeTypeDefs(loadedTypes);
// // 불러온 Queries, Mutations 합치기
// const resolvers = mergeResolvers(loadedResolvers);
// // 합쳐진 typeDefs, resolvers로 Schema 만들기
// const schema = makeExecutableSchema({ typeDefs, resolvers });
// export defult로 최종 Schema 내보내기
export default schema;